from typing import Any, Iterable, Protocol
from domain.models.frame import ConnectionState


class GenericDBRepo(Protocol):

    def add(self, models: Iterable | Any) -> None: ...

    def delete(self, models: Iterable | Any) -> None: ...

    def get(self, model_id: Iterable | Any) -> Iterable | Any: ...


class GenericFrameRepo(Protocol):

    @property
    def connection_state(self) -> ConnectionState: ...

    async def connect(self, retries: int) -> None: ...

    async def disconnect(self) -> None: ...

    async def upload_file(self, file_path: str) -> None: ...

    # async def upload_firmware(self, firmware_path: str) -> None: ...

    async def send_str(self, data: str) -> None: ...

    async def send_bytes(self, data: bytes) -> None: ...

    async def receive_str(self) -> str: ...

    async def receive_bytes(self) -> bytes: ...

    async def halt_execution(self) -> None: ...

    async def send_reset(self) -> None: ...
